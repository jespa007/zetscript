
version 1.00.04b
================
-Added metamethod support. Example use of methamethod add in the class,

class A{

  var x,y;
  
  ...
  
  function _add(var1, var2){
  	var a = new A;
  	a.x = var1.x + var2.x;
  	a.y = var1.y + var2.y;
  }

};



var h = new A(0,1) + new A(1,0); // h should be (1,1)

version 1.00.03b
================

-Added support functions with different parameters.
-Added symbol detection


__symbol: variable symbol
_pN_symbol: function symbol where N is a number that explain the number parameter entry

 
-solved problem double unref shared pointer when rets cscriptvar


version 1.00.02b
================

Change tAleObjectInfo tStackElement

Struct and vectors must hold stack variable instead of CScripVariable.

1. Change CScriptVariable to tStackValue.

1.1- CVector change,
 vector<CScriptVariable *> m_value;
  to
  vector<tStackValue> m_value;

1.2-CStruct

 map <string, CScriptVariable *> m_property;

to

 map <string, tStackValue> m_property;



2. In order to expose script data into C code, implement these functions.

template<_T>
bool tStackValue::instanceof(const tStackValue & stk_v);

template<_T>
_T tStackValue::read(const tStackValue & stk_v);

template<_T>
tStackValue::write(tStackValue & stk_v, const _T & _v);

Warn the user that in native function wether it creates a new variable
function and you pushes into vector or struct is not covered by the script
engine and will crash.

Or maybe in the write function cast an exception that tells is not
possible to override pointers. In other words, write funtion is only for
integers, floats, numbers and strings.

version 1.00.01b
================

- In mov instruction preserve RUNTIME MASK before assign TYPE VAR MASK.
- Remove warning about "dereferencing type-punned pointer will break strict-aliasing rules"
- Test function call.
-



Version 1.00.00b
================

Base version
Exit version